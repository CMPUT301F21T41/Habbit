package com.example.habbit;


import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import androidx.annotation.NonNull;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.firebase.firestore.CollectionReference;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.EventListener;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.FirebaseFirestoreException;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.google.firebase.firestore.QuerySnapshot;


import java.util.ArrayList;
import java.util.Map;


public class MainActivity extends AppCompatActivity
        implements HabitEntryFragment.OnFragmentInteractionListener, HabitDetailsFragment.OnHabitClickListener {

    private static final String TAG = "MyActivity";
    final CollectionReference userCollectionReference = FirebaseFirestore.getInstance().collection("users");
    User user = new User();
    String userLoggedIn;

    ListView habitList;
    ArrayAdapter<Habit> habitAdapter;
    ArrayList<Habit> habitDataList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        habitList = findViewById(R.id.habitListView);
        habitDataList = user.getUserHabits();
        habitAdapter = new CustomHabitList(this, habitDataList);
        habitList.setAdapter(habitAdapter);

        //**GET USER LOGIN -- ADD LATER**
        userLoggedIn = "seanwruther9";

        final FloatingActionButton addHabitButton = findViewById(R.id.add_habit_button);
        addHabitButton.setOnClickListener(view -> HabitEntryFragment.newInstance(null)
                .show(getSupportFragmentManager(), "ADD_HABIT"));

        /* instantiate a listener for habitList that will open a HabitDetailsFragment when a Habit is selected */
        habitList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                Habit viewHabit = habitAdapter.getItem(i);
                HabitDetailsFragment.newInstance(viewHabit).show(getSupportFragmentManager(),"VIEW_HABIT");
            }
        });

        userCollectionReference.document(userLoggedIn).collection("Habits").addSnapshotListener(new EventListener<QuerySnapshot>() {
            @Override
            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {
                user.clearHabits();
                Map<String,Object> habitData;
                for(QueryDocumentSnapshot document:value) {
                    habitData = document.getData();
                    Log.d(TAG, document.getId() + " => " + habitData);
                    if (!habitData.isEmpty()) {
                        // every time we pull from Firestore, get the document ID data and associate it with the Habit object
                        Habit habit = new Habit(habitData.get("title").toString(), habitData.get("reason").toString(),
                                habitData.get("date").toString());
                        habit.setId(document.getId());
                        user.addHabit(habit);
                    }
                }
                habitDataList=user.getUserHabits();
                habitAdapter.notifyDataSetChanged();
                Log.d(TAG,user.printHabits());
            }
        });
    }

    @Override
    public void onAddOkPressed(@Nullable Habit habit) {

        if (habit == null) throw new AssertionError();
        String titleText = habit.getTitle();
        String reasonText = habit.getReason();
        String dateText = habit.getDate();

        if(!titleText.isEmpty() && !reasonText.isEmpty() && !dateText.isEmpty()){

            // adding a habit using an autogenerated ID rather than using titletext
            userCollectionReference.document(userLoggedIn).collection("Habits")
                    .add(habit)
                    // TODO: why do the on success and on failure listeners not work
                    .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
                        @Override
                        public void onSuccess(@NonNull DocumentReference documentReference) {
                            Log.d(TAG, "Successfully added document!");
                        }
                    })
                    .addOnFailureListener(new OnFailureListener() {
                        @Override
                        public void onFailure(@NonNull Exception e) {
                            Log.d(TAG, "something went wrong");
                        }
                    });
        }
    }

    @Override
    public void onDeletePressed(Habit habit){
        DocumentReference userDoc = userCollectionReference.document(userLoggedIn);
        userDoc.collection("Habits").document(habit.getId())
                .delete();
    }

    public void onEditHabitPressed(Habit newHabit){
        if (newHabit == null) throw new AssertionError();
        String titleText = newHabit.getTitle();
        String reasonText = newHabit.getReason();
        String dateText = newHabit.getDate();

        if(!titleText.isEmpty() && !reasonText.isEmpty() && !dateText.isEmpty() ){
            DocumentReference userDoc = userCollectionReference.document(userLoggedIn);
            userDoc.collection("Habits").document(newHabit.getId())
                    .update("title", titleText,
                            "reason", reasonText,
                            "date", dateText);
        }
    }
}